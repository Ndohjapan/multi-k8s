# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Build and Deploy to GKE

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: multi-cluster    # Add your cluster name here.
  GKE_ZONE: us-central1-c   # Add your cluster zone here.
  DEPLOYMENT_NAME: gke-test # Add your deployment name here.
  IMAGE_TAG: ${{ github.sha }}


jobs:
  build_test:
    name: Test React App
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: build client image
      run: docker build -t ndohjapan/react-test -f ./client/dockerfile.dev ./client


    # Run the test script for the react and add --coverage to ensure that the test exits

    - name: test app
      run: docker run --rm --detach ndohjapan/react-test npm test

  push_to_Docker_Hub:

    # The type of runner that the job will run on 

    runs-on: ubuntu-latest

    # build docker image and push to docker-hub
    # only if the app build and test successfully
    needs: [build_test]

    steps:

      - uses: actions/checkout@v3

      # Login to docker

      - name: login to docker
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: build client
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/multi-client:${{ env.IMAGE_TAG }} ./client

      - name: build nginx
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/multi-nginx:${{ env.IMAGE_TAG }} ./nginx

      - name: build server
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/multi-server:${{ env.IMAGE_TAG }} ./server

      - name: build worker
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/multi-worker:${{ env.IMAGE_TAG }} ./worker

      - name: push client to docker hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/multi-client:${{ env.IMAGE_TAG }}

      - name: push nginx to docker hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/multi-nginx:${{ env.IMAGE_TAG }}

      - name: push server to docker hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/multi-server:${{ env.IMAGE_TAG }}

      - name: push worker to docker hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/multi-worker:${{ env.IMAGE_TAG }}

  deploy_to_kubernetes:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    environment: production

    needs: [push_to_Docker_Hub]

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
  
    # Setup gcloud CLI
    - uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: 'projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
        service_account: ${{ secrets.GKE_EMAIL }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    
    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}


    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash
        sudo mv ./kustomize /usr/local/bin

    # Deploy the Docker images to the GKE cluster
    - name: Deploy
      run: |-
        kustomize edit set image ${{ secrets.DOCKER_USERNAME }}/multi-client:${{ env.IMAGE_TAG }}
        kustomize edit set image ${{ secrets.DOCKER_USERNAME }}/multi-server:${{ env.IMAGE_TAG }}
        kustomize edit set image ${{ secrets.DOCKER_USERNAME }}/multi-worker:${{ env.IMAGE_TAG }}
        kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide
      env:
        GITHUB_SHA: ${{ github.sha }}

